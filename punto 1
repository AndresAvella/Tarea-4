#include <iostream>
#include <fstream>
#include <math.h>
using namespace std;
double g = 10.0;
double c=0.2 ;
double m = 850.0;
 double ay;
double ax;
double h = 0.001;
double c1;
double d1;
double c2;
double d2;
double c3;
double d3;
double c4;
double d4;
double vfx;
double c11;
double c22;
double c33;
double c44;
double d11;
double d22;
double d33;
double d44;
double vfy;
double xf;
double yf;


double acelerax(double vx, double vy){
    
    ax=((vx*vx)+(vy*vy))*(-c/m);
    return ax;
}
double aceleray(double vx, double vy ){
    
    ay= -g - ((vx*vx)+(vy*vy))*(c/m);
    return ay;
}
double rkvelocidady(double vx, double vy){
    
    c1=h* aceleray( vx ,  vy );
   
    
    c2=h*aceleray(vx,vy+0.5*c1);
    
    
    c3=h*aceleray(vx,vy+0.5*c2);
   
    
    c4=h*aceleray(vx,vy+c3);
    
    
    vfy= vy+1.0/6.0 *(c1+c2*2+c3*2+c4);
    
    return vfy;
    
    
    
    
}

double rkvelocidadx(double vx, double vy){
    
    c11=h* acelerax( vx ,  vy );
    
    
    c22=h*acelerax(vx+0.5*c11,vy);
    
    
    c33=h*acelerax(vx+0.5*c22,vy);
    
    
    c44=h*acelerax(vx+c33,vy);
    
    
    vfx= vx+1.0/6.0 *(c11+c22*2+c33*2+c44);
    return vfx;
    
}

double rkposiy(double vx , double vy , double yo ){
    
    c1=h* aceleray( vx ,  vy );
    d1=h*vy;
    
    c2=h*aceleray(vx,vy+0.5*c1);
    d2=h*(vy+0.5*c2);
    
    c3=h*aceleray(vx,vy+0.5*c2);
    d3= h*(vy+0.5*c3);
    
    c4=h*aceleray(vx,vy+c3);
    d4=h*(vy+0.5*c4);
    
    yf= yo+1.0/6.0 *(d1+d2*2+d3*2+d4);
    
    return yf;
   
    
}
double rkposix(double vx , double vy , double xo ){
    
    c11=h* aceleray( vx ,  vy );
    d11=h*vx;
    
    c22=h*aceleray(vx+0.5*c11,vy);
    d22=h*(vx+0.5*c22);
    
    c33=h*aceleray(vx+0.5*c22,vy);
    d33=h*(vx+0.5*c33);
    
    c44=h*aceleray(vx+c33,vy);
    d44=h*(vx+0.5*c44);
    
    
    xf= xo+1.0/6.0 *(d11+d22*2+d33*2+d44);
    
    return xf;
    
    
    
}

